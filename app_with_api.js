// Dolce Deals Fashion App - –í–µ—Ä—Å–∏—è —Å API –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–µ–π
class FashionAppWithAPI extends FashionApp {
    constructor() {
        super();
        // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –±–∞–∑–æ–≤—ã–π URL API –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –æ–∫—Ä—É–∂–µ–Ω–∏—è
        this.apiBaseUrl = window.location.hostname === 'localhost' 
            ? 'http://localhost:5001/api'
            : `${window.location.protocol}//${window.location.host}/api`;
        this.fallbackToLocalData = true;
        this.lastSyncTime = null;
    }

    // –ü–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è–µ–º –º–µ—Ç–æ–¥ –∑–∞–≥—Ä—É–∑–∫–∏ —Ç–æ–≤–∞—Ä–æ–≤ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å API
    async loadProducts() {
        try {
            console.log('üîÑ –ó–∞–≥—Ä—É–∑–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤ –∏–∑ API...');
            
            // –ü—Ä–æ–±—É–µ–º –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏–∑ API
            const apiProducts = await this.loadFromAPI();
            if (apiProducts && apiProducts.length > 0) {
                this.products = apiProducts;
                this.lastSyncTime = new Date().toISOString();
                console.log(`‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ ${this.products.length} —Ç–æ–≤–∞—Ä–æ–≤ –∏–∑ API`);
                
                // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ localStorage –∫–∞–∫ –∫—ç—à
                this.cacheProducts(this.products);
                return;
            }
            
            // –ï—Å–ª–∏ API –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ, –ø—Ä–æ–±—É–µ–º –∫—ç—à
            if (this.fallbackToLocalData) {
                console.log('‚ö†Ô∏è API –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ, –∑–∞–≥—Ä—É–∂–∞–µ–º –∏–∑ –∫—ç—à–∞...');
                const cachedProducts = this.loadFromCache();
                
                if (cachedProducts && cachedProducts.length > 0) {
                    this.products = cachedProducts;
                    console.log(`üì¶ –ó–∞–≥—Ä—É–∂–µ–Ω–æ ${this.products.length} —Ç–æ–≤–∞—Ä–æ–≤ –∏–∑ –∫—ç—à–∞`);
                    this.showOfflineNotification();
                    return;
                }
            }
            
            // –ï—Å–ª–∏ –Ω–∏—á–µ–≥–æ –Ω–µ –ø–æ–º–æ–≥–ª–æ, –∑–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç–∞—Ç–∏—á–Ω—ã–π JSON
            console.log('üìÑ –ó–∞–≥—Ä—É–∑–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤ –∏–∑ —Å—Ç–∞—Ç–∏—á–Ω–æ–≥–æ JSON...');
            await this.loadFromStaticJSON();
            
        } catch (error) {
            console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ç–æ–≤–∞—Ä–æ–≤:', error);
            // –í –∫—Ä–∞–π–Ω–µ–º —Å–ª—É—á–∞–µ –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
            this.products = this.getExampleProducts();
        }
    }

    async loadFromAPI() {
        try {
            const response = await fetch(`${this.apiBaseUrl}/products`, {
                method: 'GET',
                headers: {
                    'Content-Type': 'application/json',
                },
                // Timeout –¥–ª—è API –∑–∞–ø—Ä–æ—Å–∞
                signal: AbortSignal.timeout(10000) // 10 —Å–µ–∫—É–Ω–¥
            });

            if (!response.ok) {
                throw new Error(`API –æ—à–∏–±–∫–∞: ${response.status} ${response.statusText}`);
            }

            const products = await response.json();
            
            // –í–∞–ª–∏–¥–∏—Ä—É–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–∞–Ω–Ω—ã—Ö
            if (Array.isArray(products) && products.length > 0) {
                return this.validateAndProcessProducts(products);
            }
            
            return null;
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑ API:', error);
            return null;
        }
    }

    validateAndProcessProducts(products) {
        return products.filter(product => {
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è
            return product.id && 
                   product.name && 
                   product.brand && 
                   product.price && 
                   product.gender && 
                   product.category;
        }).map(product => {
            // –û–±–µ—Å–ø–µ—á–∏–≤–∞–µ–º —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å —Å —Ñ–æ—Ä–º–∞—Ç–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
            return {
                ...product,
                colors: product.colors || ['black'],
                sizes: product.sizes || ['M'],
                materials: product.materials || ['–¢–µ–∫—Å—Ç–∏–ª—å'],
                onSale: product.onSale || false,
                description: product.description || ''
            };
        });
    }

    async loadFromStaticJSON() {
        try {
            const response = await fetch('data/products.json');
            if (!response.ok) {
                throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ç–æ–≤–∞—Ä—ã –∏–∑ JSON');
            }
            this.products = await response.json();
            console.log('üìÑ –ó–∞–≥—Ä—É–∂–µ–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤ –∏–∑ JSON:', this.products.length);
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑ JSON:', error);
            this.products = this.getExampleProducts();
        }
    }

    // –ö—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–æ–≤ –≤ localStorage
    cacheProducts(products) {
        try {
            const cacheData = {
                products: products,
                timestamp: new Date().toISOString(),
                version: '1.0.0'
            };
            localStorage.setItem('dolce_products_cache', JSON.stringify(cacheData));
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∫—ç—à–∞:', error);
        }
    }

    loadFromCache() {
        try {
            const cached = localStorage.getItem('dolce_products_cache');
            if (!cached) return null;

            const cacheData = JSON.parse(cached);
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–æ–∑—Ä–∞—Å—Ç –∫—ç—à–∞ (–Ω–µ —Å—Ç–∞—Ä—à–µ 24 —á–∞—Å–æ–≤)
            const cacheAge = new Date() - new Date(cacheData.timestamp);
            const maxAge = 24 * 60 * 60 * 1000; // 24 —á–∞—Å–∞ –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö
            
            if (cacheAge > maxAge) {
                console.log('üïê –ö—ç—à —É—Å—Ç–∞—Ä–µ–ª, –æ—á–∏—â–∞–µ–º');
                localStorage.removeItem('dolce_products_cache');
                return null;
            }

            return cacheData.products;
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫—ç—à–∞:', error);
            return null;
        }
    }

    // API –º–µ—Ç–æ–¥—ã –¥–ª—è —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π
    async getProductsByGender(gender) {
        try {
            const response = await fetch(`${this.apiBaseUrl}/products?gender=${gender}`);
            if (response.ok) {
                return await response.json();
            }
        } catch (error) {
            console.error(`–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–æ–≤ –¥–ª—è ${gender}:`, error);
        }
        
        // Fallback –∫ –ª–æ–∫–∞–ª—å–Ω—ã–º –¥–∞–Ω–Ω—ã–º
        return this.products.filter(p => p.gender === gender);
    }

    async getProductsByCategory(category) {
        try {
            const response = await fetch(`${this.apiBaseUrl}/products?category=${category}`);
            if (response.ok) {
                return await response.json();
            }
        } catch (error) {
            console.error(`–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–æ–≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ ${category}:`, error);
        }
        
        // Fallback –∫ –ª–æ–∫–∞–ª—å–Ω—ã–º –¥–∞–Ω–Ω—ã–º
        return this.products.filter(p => p.category === category);
    }

    async getAPIStats() {
        try {
            const response = await fetch(`${this.apiBaseUrl}/stats`);
            if (response.ok) {
                return await response.json();
            }
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:', error);
        }
        
        return null;
    }

    // –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    showOfflineNotification() {
        const notification = document.createElement('div');
        notification.className = 'offline-notification';
        notification.innerHTML = `
            <div class="notification-content">
                <span>üì∂ –†–µ–∂–∏–º –æ—Ñ—Ñ–ª–∞–π–Ω</span>
                <small>–ü–æ–∫–∞–∑–∞–Ω—ã –∫—ç—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã</small>
            </div>
        `;
        
        document.body.appendChild(notification);
        
        // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–∫—Ä—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã
        setTimeout(() => {
            if (notification.parentNode) {
                notification.parentNode.removeChild(notification);
            }
        }, 3000);
    }

    showSyncNotification(message) {
        const notification = document.createElement('div');
        notification.className = 'sync-notification';
        notification.innerHTML = `
            <div class="notification-content">
                <span>üîÑ ${message}</span>
            </div>
        `;
        
        document.body.appendChild(notification);
        
        setTimeout(() => {
            if (notification.parentNode) {
                notification.parentNode.removeChild(notification);
            }
        }, 2000);
    }

    // –ú–µ—Ç–æ–¥ –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
    async forceSyncFromAPI() {
        this.showSyncNotification('–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Ç–æ–≤–∞—Ä–æ–≤...');
        
        try {
            const apiProducts = await this.loadFromAPI();
            if (apiProducts && apiProducts.length > 0) {
                this.products = apiProducts;
                this.filteredProducts = [...this.products];
                this.lastSyncTime = new Date().toISOString();
                this.cacheProducts(this.products);
                
                // –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ
                this.applyFilters();
                this.showSyncNotification('‚úÖ –¢–æ–≤–∞—Ä—ã –æ–±–Ω–æ–≤–ª–µ–Ω—ã!');
                
                return true;
            } else {
                this.showSyncNotification('‚ö†Ô∏è API –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ');
                return false;
            }
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏:', error);
            this.showSyncNotification('‚ùå –û—à–∏–±–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏');
            return false;
        }
    }

    // –ü–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è–µ–º setup –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π
    setupEventListeners() {
        // –í—ã–∑—ã–≤–∞–µ–º —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–π –º–µ—Ç–æ–¥
        super.setupEventListeners();
        
        // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
        const syncBtn = document.getElementById('syncButton');
        if (syncBtn) {
            syncBtn.addEventListener('click', () => this.forceSyncFromAPI());
        }
        
        // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
        window.addEventListener('online', () => {
            console.log('üåê –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ');
            setTimeout(() => this.forceSyncFromAPI(), 1000);
        });
        
        window.addEventListener('offline', () => {
            console.log('üìµ –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –ø–æ—Ç–µ—Ä—è–Ω–æ');
            this.showOfflineNotification();
        });
    }

    // –ú–µ—Ç–æ–¥ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ API
    async displayAPIStats() {
        const stats = await this.getAPIStats();
        if (!stats) return;

        const statsContainer = document.getElementById('apiStats');
        if (statsContainer) {
            statsContainer.innerHTML = `
                <div class="api-stats">
                    <h3>üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤</h3>
                    <div class="stats-grid">
                        <div class="stat-item">
                            <span class="stat-number">${stats.total_products}</span>
                            <span class="stat-label">–í—Å–µ–≥–æ —Ç–æ–≤–∞—Ä–æ–≤</span>
                        </div>
                        <div class="stat-item">
                            <span class="stat-number">${stats.with_discount}</span>
                            <span class="stat-label">–°–æ —Å–∫–∏–¥–∫–æ–π</span>
                        </div>
                        <div class="stat-item">
                            <span class="stat-number">${Math.round(stats.avg_price / 100)} ‚ÇΩ</span>
                            <span class="stat-label">–°—Ä–µ–¥–Ω—è—è —Ü–µ–Ω–∞</span>
                        </div>
                    </div>
                    <div class="gender-stats">
                        ${Object.entries(stats.by_gender).map(([gender, count]) => 
                            `<span class="gender-stat">${this.getGenderName(gender)}: ${count}</span>`
                        ).join(' ‚Ä¢ ')}
                    </div>
                    <div class="sync-info">
                        <small>–ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ: ${this.formatSyncTime()}</small>
                    </div>
                </div>
            `;
        }
    }

    getGenderName(gender) {
        const names = {
            'men': '–ú—É–∂—Å–∫–æ–µ',
            'women': '–ñ–µ–Ω—Å–∫–æ–µ', 
            'kids': '–î–µ—Ç—Å–∫–æ–µ'
        };
        return names[gender] || gender;
    }

    formatSyncTime() {
        if (!this.lastSyncTime) return '–ù–∏–∫–æ–≥–¥–∞';
        
        const syncDate = new Date(this.lastSyncTime);
        const now = new Date();
        const diffMs = now - syncDate;
        const diffMins = Math.round(diffMs / (1000 * 60));
        
        if (diffMins < 1) return '–¢–æ–ª—å–∫–æ —á—Ç–æ';
        if (diffMins < 60) return `${diffMins} –º–∏–Ω –Ω–∞–∑–∞–¥`;
        
        const diffHours = Math.round(diffMins / 60);
        if (diffHours < 24) return `${diffHours} —á –Ω–∞–∑–∞–¥`;
        
        return syncDate.toLocaleDateString();
    }

    // –ü–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è–µ–º init –¥–ª—è –ø–æ–∫–∞–∑–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
    async init() {
        await super.init();
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É API –µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–Ω–∞
        setTimeout(() => this.displayAPIStats(), 1000);
    }
}

// –°–æ–∑–¥–∞–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è —Å API
let app;

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞
document.addEventListener('DOMContentLoaded', () => {
    try {
        app = new FashionAppWithAPI();
        console.log('üöÄ Dolce Deals Fashion App —Å API –∑–∞–ø—É—â–µ–Ω–æ!');
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è:', error);
        // Fallback –∫ –æ–±—ã—á–Ω–æ–π –≤–µ—Ä—Å–∏–∏
        app = new FashionApp();
    }
});

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –¥—Ä—É–≥–∏—Ö —Å–∫—Ä–∏–ø—Ç–∞—Ö
if (typeof module !== 'undefined' && module.exports) {
    module.exports = FashionAppWithAPI;
}