#!/usr/bin/env python3
"""
Dolce System Launcher - –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∑–∞–ø—É—Å–∫ –≤—Å–µ–π —Å–∏—Å—Ç–µ–º—ã
–ó–∞–ø—É—Å–∫–∞–µ—Ç –ø–∞—Ä—Å–µ—Ä, API —Å–µ—Ä–≤–µ—Ä –∏ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
"""

import subprocess
import sys
import os
import time
import threading
import webbrowser
from pathlib import Path

def print_banner():
    print("üåü" * 50)
    print("üõçÔ∏è  DOLCE DEALS - FASHION SYSTEM LAUNCHER")
    print("üåü" * 50)
    print("üìã –ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã —Å–∏—Å—Ç–µ–º—ã:")
    print("   1. üï∑Ô∏è  BestSecret Parser - –ø–∞—Ä—Å–∏–Ω–≥ —Ç–æ–≤–∞—Ä–æ–≤")
    print("   2. üîå API Server - —Å–µ—Ä–≤–µ—Ä –¥–∞–Ω–Ω—ã—Ö") 
    print("   3. üåê Web App - –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ Dolce")
    print("   4. üíæ Database - –±–∞–∑–∞ —Ç–æ–≤–∞—Ä–æ–≤")
    print()

def check_requirements():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"""
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...")
    
    try:
        import flask
        import flask_cors
        print("‚úÖ Flask –∏ Flask-CORS —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")
    except ImportError:
        print("‚ùå Flask –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!")
        print("üì¶ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏: pip install -r requirements_api.txt")
        return False
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ñ–∞–π–ª–æ–≤
    required_files = [
        'bestsecret_parser.py',
        'dolce_api_server.py', 
        'dolce/index.html',
        'dolce/app.js',
        'dolce/app_with_api.js'
    ]
    
    for file_path in required_files:
        if not os.path.exists(file_path):
            print(f"‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç —Ñ–∞–π–ª: {file_path}")
            return False
    
    print("‚úÖ –í—Å–µ —Ñ–∞–π–ª—ã –Ω–∞–π–¥–µ–Ω—ã")
    return True

def run_parser():
    """–ó–∞–ø—É—Å–∫ –ø–∞—Ä—Å–µ—Ä–∞ BestSecret"""
    print("\nüï∑Ô∏è –ó–ê–ü–£–°–ö –ü–ê–†–°–ï–†–ê BESTSECRET...")
    print("‚è±Ô∏è  –≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å 2-3 –º–∏–Ω—É—Ç—ã...")
    
    try:
        result = subprocess.run([
            sys.executable, 'bestsecret_parser.py'
        ], capture_output=True, text=True, timeout=300)  # 5 –º–∏–Ω—É—Ç timeout
        
        if result.returncode == 0:
            print("‚úÖ –ü–∞—Ä—Å–µ—Ä –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
            print(f"üìä –ù–∞–π–¥–µ–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤ –≤ –ª–æ–≥–∞—Ö:")
            # –ò—â–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–æ–≤–∞—Ä–∞—Ö –≤ –≤—ã–≤–æ–¥–µ
            output_lines = result.stdout.split('\n')
            for line in output_lines:
                if '–ù–∞–π–¥–µ–Ω–æ' in line and '—Ç–æ–≤–∞—Ä' in line:
                    print(f"   {line}")
                elif '‚úÖ' in line and ('–ò–∑–≤–ª–µ—á–µ–Ω–æ' in line or '—Ç–æ–≤–∞—Ä' in line):
                    print(f"   {line}")
            return True
        else:
            print("‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –ø–∞—Ä—Å–µ—Ä–∞:")
            print(result.stderr)
            return False
            
    except subprocess.TimeoutExpired:
        print("‚è∞ –¢–∞–π–º–∞—É—Ç –ø–∞—Ä—Å–µ—Ä–∞ (>5 –º–∏–Ω—É—Ç)")
        return False
    except Exception as e:
        print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø–∞—Ä—Å–µ—Ä–∞: {e}")
        return False

def start_api_server():
    """–ó–∞–ø—É—Å–∫ API —Å–µ—Ä–≤–µ—Ä–∞ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ"""
    def run_api():
        try:
            print("\nüîå –ó–ê–ü–£–°–ö API –°–ï–†–í–ï–†–ê...")
            print("üåê API –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ –Ω–∞ http://localhost:5001")
            
            # –ó–∞–ø—É—Å–∫–∞–µ–º API —Å–µ—Ä–≤–µ—Ä
            subprocess.run([sys.executable, 'dolce_api_server.py'])
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ API —Å–µ—Ä–≤–µ—Ä–∞: {e}")
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
    api_thread = threading.Thread(target=run_api, daemon=True)
    api_thread.start()
    
    # –î–∞–µ–º –≤—Ä–µ–º—è —Å–µ—Ä–≤–µ—Ä—É –∑–∞–ø—É—Å—Ç–∏—Ç—å—Å—è
    time.sleep(3)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å API
    try:
        import requests
        response = requests.get('http://localhost:5001/api/health', timeout=5)
        if response.status_code == 200:
            print("‚úÖ API —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
            return True
        else:
            print(f"‚ö†Ô∏è API —Å–µ—Ä–≤–µ—Ä –æ—Ç–≤–µ—á–∞–µ—Ç —Å –∫–æ–¥–æ–º: {response.status_code}")
            return False
    except Exception as e:
        print(f"‚ùå API —Å–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {e}")
        return False

def start_web_server():
    """–ó–∞–ø—É—Å–∫ –≤–µ–±-—Å–µ—Ä–≤–µ—Ä–∞ –¥–ª—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
    def run_web():
        try:
            print("\nüåê –ó–ê–ü–£–°–ö –í–ï–ë-–°–ï–†–í–ï–†–ê...")
            print("üì± –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ –Ω–∞ http://localhost:8080")
            
            # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –ø–∞–ø–∫—É dolce
            os.chdir('dolce')
            
            # –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ—Å—Ç–æ–π HTTP —Å–µ—Ä–≤–µ—Ä
            subprocess.run([sys.executable, '-m', 'http.server', '8080'])
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –≤–µ–±-—Å–µ—Ä–≤–µ—Ä–∞: {e}")
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ  
    web_thread = threading.Thread(target=run_web, daemon=True)
    web_thread.start()
    
    # –î–∞–µ–º –≤—Ä–µ–º—è —Å–µ—Ä–≤–µ—Ä—É –∑–∞–ø—É—Å—Ç–∏—Ç—å—Å—è
    time.sleep(2)
    
    return True

def open_application():
    """–û—Ç–∫—Ä—ã—Ç–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –≤ –±—Ä–∞—É–∑–µ—Ä–µ"""
    print("\nüöÄ –û–¢–ö–†–´–¢–ò–ï –ü–†–ò–õ–û–ñ–ï–ù–ò–Ø...")
    time.sleep(2)
    
    try:
        webbrowser.open('http://localhost:8080')
        print("‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –æ—Ç–∫—Ä—ã—Ç–æ –≤ –±—Ä–∞—É–∑–µ—Ä–µ!")
        return True
    except Exception as e:
        print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫—Ä—ã—Ç—å –±—Ä–∞—É–∑–µ—Ä: {e}")
        print("üåê –û—Ç–∫—Ä–æ–π—Ç–µ –≤—Ä—É—á–Ω—É—é: http://localhost:8080")
        return False

def show_status():
    """–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ —Å–∏—Å—Ç–µ–º—ã"""
    print("\n" + "üéØ" * 50)
    print("üìä –°–¢–ê–¢–£–° –°–ò–°–¢–ï–ú–´ DOLCE DEALS")
    print("üéØ" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    if os.path.exists('products_database.json'):
        try:
            import json
            with open('products_database.json', 'r', encoding='utf-8') as f:
                products = json.load(f)
            print(f"üíæ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: ‚úÖ {len(products)} —Ç–æ–≤–∞—Ä–æ–≤")
        except:
            print("üíæ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: ‚ùå –ø–æ–≤—Ä–µ–∂–¥–µ–Ω")
    else:
        print("üíæ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: ‚ùå –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º API
    try:
        import requests
        response = requests.get('http://localhost:5001/api/health', timeout=2)
        if response.status_code == 200:
            print("üîå API –°–µ—Ä–≤–µ—Ä: ‚úÖ —Ä–∞–±–æ—Ç–∞–µ—Ç (http://localhost:5001)")
        else:
            print("üîå API –°–µ—Ä–≤–µ—Ä: ‚ö†Ô∏è –æ—à–∏–±–∫–∏")
    except:
        print("üîå API –°–µ—Ä–≤–µ—Ä: ‚ùå –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–µ–±-—Å–µ—Ä–≤–µ—Ä
    try:
        import requests
        response = requests.get('http://localhost:8080', timeout=2)
        if response.status_code == 200:
            print("üåê –í–µ–±-—Å–µ—Ä–≤–µ—Ä: ‚úÖ —Ä–∞–±–æ—Ç–∞–µ—Ç (http://localhost:8080)")
        else:
            print("üåê –í–µ–±-—Å–µ—Ä–≤–µ—Ä: ‚ö†Ô∏è –æ—à–∏–±–∫–∏")
    except:
        print("üåê –í–µ–±-—Å–µ—Ä–≤–µ—Ä: ‚ùå –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
    
    print("\nüìã –î–û–°–¢–£–ü–ù–´–ï ENDPOINTS:")
    endpoints = [
        "üè† –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ: http://localhost:8080",
        "üìä API —Ç–æ–≤–∞—Ä—ã: http://localhost:5001/api/products", 
        "üìà API —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞: http://localhost:5001/api/stats",
        "üíì API —Å—Ç–∞—Ç—É—Å: http://localhost:5001/api/health"
    ]
    
    for endpoint in endpoints:
        print(f"   {endpoint}")

def main():
    print_banner()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è
    if not check_requirements():
        return
    
    print("üöÄ –ù–ê–ß–ò–ù–ê–ï–ú –ó–ê–ü–£–°–ö –°–ò–°–¢–ï–ú–´...\n")
    
    # –®–∞–≥ 1: –ó–∞–ø—É—Å–∫ –ø–∞—Ä—Å–µ—Ä–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
    parser_success = run_parser()
    
    if not parser_success:
        print("\n‚ö†Ô∏è –ü–∞—Ä—Å–µ—Ä –Ω–µ –∑–∞–ø—É—Å—Ç–∏–ª—Å—è, –Ω–æ API –º–æ–∂–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫—ç—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ")
    
    # –®–∞–≥ 2: –ó–∞–ø—É—Å–∫ API —Å–µ—Ä–≤–µ—Ä–∞
    api_success = start_api_server()
    
    if not api_success:
        print("‚ùå API —Å–µ—Ä–≤–µ—Ä –Ω–µ –∑–∞–ø—É—Å—Ç–∏–ª—Å—è! –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å —Å –ª–æ–∫–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏")
    
    # –®–∞–≥ 3: –ó–∞–ø—É—Å–∫ –≤–µ–±-—Å–µ—Ä–≤–µ—Ä–∞
    web_success = start_web_server()
    
    if not web_success:
        print("‚ùå –í–µ–±-—Å–µ—Ä–≤–µ—Ä –Ω–µ –∑–∞–ø—É—Å—Ç–∏–ª—Å—è!")
        return
    
    # –®–∞–≥ 4: –û—Ç–∫—Ä—ã—Ç–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    open_application()
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å
    show_status()
    
    print("\n" + "üéâ" * 50)
    print("üéä –°–ò–°–¢–ï–ú–ê DOLCE DEALS –ó–ê–ü–£–©–ï–ù–ê!")
    print("üéâ" * 50)
    print("\nüì± –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≥–æ—Ç–æ–≤–æ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é!")
    print("‚≠ê –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏:")
    print("   ‚Ä¢ –†–µ–∞–ª—å–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã –∏–∑ BestSecret")
    print("   ‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —á–µ—Ä–µ–∑ API") 
    print("   ‚Ä¢ –û—Ñ—Ñ–ª–∞–π–Ω —Ä–µ–∂–∏–º —Å –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ–º")
    print("   ‚Ä¢ PWA –ø–æ–¥–¥–µ—Ä–∂–∫–∞")
    print("   ‚Ä¢ Telegram WebApp —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å")
    
    print("\nüîÑ –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ —Å–∏—Å—Ç–µ–º—ã –Ω–∞–∂–º–∏—Ç–µ Ctrl+C")
    
    try:
        # –î–µ—Ä–∂–∏–º —Å–∏—Å—Ç–µ–º—É —Ä–∞–±–æ—Ç–∞—é—â–µ–π
        while True:
            time.sleep(60)
            print(".", end="", flush=True)  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —á—Ç–æ —Å–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç
    except KeyboardInterrupt:
        print("\n\nüëã –°–∏—Å—Ç–µ–º–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
        print("–°–ø–∞—Å–∏–±–æ –∑–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ Dolce Deals!")

if __name__ == "__main__":
    main()